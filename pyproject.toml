[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "intelligence-layer"
version = "7.2.0"
description = ""
authors = ["Aleph Alpha Engineering <engineering@aleph-alpha.com>"]
readme = "README.md"
license = "Aleph Alpha Licensed"
packages = [{ include = "intelligence_layer", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
pydantic = "2.9.*"
aleph-alpha-client = ">=7.1.0"
python-dotenv = "*"
semantic-text-splitter = "^0.18.0"
qdrant-client = "^1.12.0"
rich = "^13.9.3"
datasets = "^3.0.2"
requests = "^2.32.3"
pycountry = "24.6.1"
opentelemetry-api = "^1.22.0"
opentelemetry-sdk = "^1.22.0"
huggingface-hub = "^0.26.1"
opentelemetry-exporter-otlp-proto-http = "1.23.0"
# summary grader
rouge-score = "^0.1.2"
sacrebleu = "^2.4.3"
lingua-language-detector = "^2.0.2"
argilla = "^2.3.0"
dict-hash = "^1.3.4"

[tool.poetry.group.dev.dependencies]
# lint & format
mypy = "^1.13.0"
nbqa = "^1.9.0"
ruff = "^0.7.0"
pre-commit = "^4.0.1"

# tests
pytest = "^8.3"
pytest-xdist = "^3.6.1"
nbconvert = "^7.16.4"

# typing
httpx = "*"
types-Pygments = "*"
types-colorama = "*"
types-docutils = "*"
types-setuptools = "*"
types-decorator = "*"
types-requests = "*"
types-tqdm = "*"
pandas-stubs = "^2.2.3.241009"

# docs
sphinx-rtd-theme = "^3.0.1"
sphinx = "^8.1.3"
matplotlib = "^3.9.2"

[tool.poetry.group.docs.dependencies]
fastapi = "^0.115.3"
uvicorn = "^0.32.0"
hypercorn = "^0.17.3"
jupyter = "^1.1.1"

# [tool.poetry.extras]
# argilla = ["argilla"]
# grader = ["rouge-score", "sacrebleu"]
# language-detection = ["lingua-language-detector", "pycountry"]


[tool.mypy]
files = "src,tests"
strict = "True"

[tool.pytest.ini_options]
markers = [
    "internal: marks tests as internal (deselect with '-k \"not internal\"')",
    "docker: the test depends on having a docker container running.",
]
addopts = "--capture=tee-sys"
filterwarnings = [ #ignore: message : warning : location ?
    'ignore:.*\`general_plain_validator_function\` is deprecated.*',
    'ignore::DeprecationWarning:.*importlib._bootstrap.*',
]

[tool.ruff]
target-version = "py310"
extend-include = ["*.ipynb"]

[tool.ruff.lint]
# defaults: ["E4", "E7", "E9", "F"]
# check https://docs.astral.sh/ruff/rules/ for more info
select = [
    "E4", "E7", "E9",
    "F",
    "W",
    # isort
    "I",
    # simplify
    "SIM",
    # pathlib, small but may be nice
    "PTH",
    # update to newer python versions (mostly typing)
    "UP",
    # ruff dependent checks
    "RUF",
    # bugbear
    "B",
    # pydocstring
    "D"


]
# Did not seem so useful: PD, T20(not yet), C90(eventually), PT (too opinionated)
ignore = [
    # Line too long
    "E501",
    # X | Y for hinting over optional
    "UP007",
    # unusual unicodes, next() instead of [0]
    "RUF001", "RUF015",
    # warnings should be self explanatory
    "B028",
    # we do not docstring everything
    "D1",
]
extend-safe-fixes = ["D415"]

[tool.ruff.lint.isort]
known-first-party = ["intelligence_layer", "documentation"]

[tool.ruff.lint.pydocstyle]
convention = "google"
