[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "intelligence-layer"
version = "3.0.0"
description = ""
authors = ["Aleph Alpha Engineering <engineering@aleph-alpha.com>"]
readme = "README.md"
license = "Aleph Alpha Licensed"
packages = [{ include = "intelligence_layer", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
pydantic = "2.7.*"
fastapi = "^0.111.0"
uvicorn = "^0.30.0"
aleph-alpha-client = ">=7.1.0"
python-dotenv = "*"
semantic-text-splitter = "^0.13.1"
qdrant-client = "^1.9.1"
rich = "^13.7.1"
nbconvert = "^7.16.4"
datasets = "^2.19.1"
jupyter = "^1.0.0"
requests = "^2.32.3"
langdetect = "^1.0.9"
pycountry = "23.12.11"
opentelemetry-api = "^1.22.0"
opentelemetry-sdk = "^1.22.0"
huggingface-hub = "^0.23.2"
opentelemetry-exporter-otlp-proto-http = "1.23.0"
# summary grader
rouge-score = "^0.1.2"
sacrebleu = "^2.4.2"

[tool.poetry.group.dev.dependencies]
# lint & format
mypy = "^1.10.0"
nbqa = "^1.8.5"
ruff = "^0.4.7"
pre-commit = "^3.7.1"

# tests
pytest = "^8.2"
pytest-xdist = "^3.6.1"
hypercorn = "^0.17.3"

# typing
httpx = "*"
types-Pygments = "*"
types-colorama = "*"
types-docutils = "*"
types-setuptools = "*"
types-decorator = "*"
types-requests = "*"
types-tqdm = "*"
pandas-stubs = "^2.2.2.240514"

# docs
sphinx-rtd-theme = "^2.0.0"
sphinx = "^7.3.7"
matplotlib = "^3.9.0"

[tool.mypy]
files = "src,tests"
strict = "True"

[tool.pytest.ini_options]
markers = [
    "internal: marks tests as internal (deselect with '-k \"not internal\"')",
    "docker: the test depends on having a docker container running."
]
addopts = "--capture=tee-sys"
filterwarnings = [
    'ignore:.*\`general_plain_validator_function\` is deprecated.*',
    'ignore::DeprecationWarning:.*importlib._bootstrap.*'
]


[tool.ruff]
extend-include = ["*.ipynb"]

[tool.isort]
profile = "black"
