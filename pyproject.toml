[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "intelligence-layer"
version = "0.6.0"
description = ""
authors = ["Aleph Alpha Engineering <engineering@aleph-alpha.com>"]
readme = "README.md"
license = "Aleph Alpha Licensed"
packages = [{ include = "intelligence_layer", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
pydantic = ">=2.0"
fastapi = "*"
uvicorn = "*"
aleph-alpha-client = ">=4.0.0"
python-dotenv = "*"
semantic-text-splitter = "^0.8.0"
qdrant-client = "^1.8.2"
rich = "^13.7.1"
nbconvert = "^7.16.3"
datasets = "^2.18.0"
jupyter = "^1.0.0"
requests = "^2.31.0"
pytest-xdist = "^3.5.0"
langdetect = "^1.0.9"
nltk = "^3.8.1"
pycountry = "23.12.11"
rouge = "^1.0.1"
opentelemetry-api = "^1.22.0"
opentelemetry-sdk = "^1.22.0"
huggingface-hub = "^0.22.1"
opentelemetry-exporter-otlp-proto-http = "1.23.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.9.0"
pytest = "*"
black = { extras = ["jupyter"], version = "^24.3.0" }
pre-commit = "*"
httpx = "*"
types-Pygments = "*"
types-colorama = "*"
types-docutils = "*"
types-setuptools = "*"
types-decorator = "*"
types-requests = "*"
types-tqdm = "*"
sphinx-rtd-theme = "^2.0.0"
sphinx = "^7.2.6"
pylama = { extras = ["all", "toml"], version = "^8.4.1" }
faker = "^24.4.0"
hypercorn = "0.16.0"

[tool.mypy]
files = "src,tests"
strict = "True"

[tool.pytest.ini_options]
markers = [
    "internal: marks tests as internal (deselect with '-k \"not internal\"')",
]
addopts = "--capture=tee-sys"
filterwarnings = [
    'ignore:.*\`general_plain_validator_function\` is deprecated.*',
]

[tool.pylama]
skip = "*/__init__.py,.venv/*,*/node_modules/*"
ignore = "E501,E203"

[tool.pylama.linter.mccabe]
max-complexity = "11"
